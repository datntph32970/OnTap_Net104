@using Newtonsoft.Json
@model IEnumerable<OnTap_Net104.Models.CartDetail>

@{
    ViewData["Title"] = "Index";
    AppDbContext db = new AppDbContext();


}

<h1>Index</h1>


<div class="form-group">
    <label for="province">Tỉnh:</label>
    <select class="form-control" id="province" name="Province" onchange="getDistrict(this.value)">
        <option value="">-- Chọn tỉnh --</option>
    </select>
    <label for="district">Huyện:</label>
    <select class="form-control" id="district" name="district" onchange="getWard(this.value)">
        <option value="">-- Chọn huyện --</option>
    </select>
    <label for="ward">Xã:</label>
    <select class="form-control" id="ward" name="ward">
        <option value="">-- Chọn xã --</option>
    </select>
    <label for="service">Dịch vụ:</label>
    <select class="form-control" id="service" name="service">
        <option value="">-- Chọn dịch vụ --</option>
    </select>
    <button class="btn btn-outline-primary" onclick="updateTrasportFeeForAllProduct()">Tính phí vận chuyển</button>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransportFee)
            </th>
            <th>Total</th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="product_@item.Id">
                <td>
                    <input class="form-check-input" id="Status_@item.Id" type="checkbox" checked="@item.Status" onchange="update('@item.Id',document.getElementById('Quantity_@item.Id').value,this.checked)" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.ActionLink(item.ProductId.ToString(), "Details", new { Controller = "Product", id = item.ProductId })
                </td>
                <td>
                    <div id="transportFee_@item.Id">@item.TransportFee</div>
                </td>
                <td>
                    <div id="total_@item.Id">@(@db.Products.FirstOrDefault(a => a.Id == item.ProductId).Price * @item.Quantity)</div>
                    <span id="price_@item.Id" hidden>@db.Products.FirstOrDefault(a => a.Id == item.ProductId).Price</span>
                    <span id="productQuatity_@item.Id" hidden>@db.Products.FirstOrDefault(a => a.Id == item.ProductId).Quantity</span>
                </td>
                <td>
                    <input class="form-control mx-1" id="Quantity_@item.Id" style="min-width:200px" type="number" min="1" max="@db.Products.FirstOrDefault(a=>a.Id == item.ProductId).Quantity" value="@item.Quantity" name="Quantity" onchange="update('@item.Id',this.value,document.getElementById('Status_@item.Id').checked)" />
                    <span class="text-danger" id="error_@item.Id" hidden="@(item.Quantity > db.Products.FirstOrDefault(a => a.Id == item.ProductId).Quantity ? false : true)">Không đủ số lượng</span>
                </td>
                <td>

                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <button onclick="Pay()" class="btn btn-outline-danger" id="buttonPay" style="float:right">Thanh toán</button>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script>
    
    function Pay() {
        $.ajax({
            url: '/Bill/Create',
            type: 'POST',
            data: {},
            success: function (data) {
                console.log(data);
                if (data == "Không có sản phẩm nào được chọn" || data == "Có sản phẩm vượt quá số lượng vui lòng thử lại!" || data == "Yêu cầu cần có địa điểm giao hàng") {
                    toastr.error(data, 'Lỗi');
                } else {
                    var billId = data;
                    $.ajax({
                        url: '/BillDetails/Create',
                        type: 'POST',
                        data: { billID: billId },
                        success: function (data) {
                            toastr.success('Thanh toán thành công', 'Success');
                            setTimeout(function () {
                                window.location.reload();
                            }, 1500);
                        },
                        error: function (xhr, status, error) {
                            toastr.error('Có lỗi xảy ra khi tạo BillDetails vui lòng thử lại!', 'Error');
                        }
                    });
                }
            },
            error: function (xhr, status, error) {
                toastr.error('Có lỗi xảy ra khi tạo Bill vui lòng thử lại!', 'Error');
            }
        });


    }

</script>
<script src="~/js/APIGHN.js"></script>
